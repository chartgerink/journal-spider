install.packages('devtools')
update.packages(checkBuilt = T, ask = F, type = "binary")
update.chjh
update.chjh
update.chjh()
plot(dbeta(shape1 = 1, shape2 = 1))
?dbeta
dbeta(seq(0, 1, .001), shape1 = 1, shape2 = 1)
plot(dbeta(seq(0, 1, .001), shape1 = 1, shape2 = 1))
for(beta in seq(.99, .9, -.01))
lines(dbeta(seq(0, 1, .001), shape1 = 1, shape2 = beta))
plot(dbeta(seq(0, 1, .001), shape1 = 1, shape2 = 1))
for(beta in seq(.99, .9, -.01))
lines(x = dbeta(seq(0, 1, .001), shape1 = 1, shape2 = beta))
plot(x = dbeta(seq(0, 1, .001), shape1 = 1, shape2 = 1))
for(beta in seq(.99, .9, -.01))
lines(x = dbeta(seq(0, 1, .001), shape1 = 1, shape2 = beta))
beta
dbeta(seq(0, 1, .001), shape1 = 1, shape2 = beta)
rbeta(n = 10, shape1 = 1, shape2 = .9)
rbeta(n = 10, shape1 = 1, shape2 = .9)
rbeta(n = 10, shape1 = 1, shape2 = .9)
rbeta(n = 10, shape1 = 1, shape2 = .9)
dbeta(seq(0, 1, .001), shape1 = 1, shape2 = beta)
density(dbeta(seq(0, 1, .001), shape1 = 1, shape2 = beta))
density(dbeta(seq(0, 1, .001), shape1 = 1, shape2 = beta))?dbeta
?dbeta
plot(x = c(.2, .5, .8), y = c(.09, .34, .69), type = 'o')
lines(x = c(.2, .5, .8), y = c(.14, .60, .94), type = 'o', pch =3)
lines(x = c(.2, .5, .8), y = c(.24, .88, .999), type = 'o', pch = 2)
plot(x = c(.2, .5, .8), y = c(.09, .34, .69), type = 'o', ylim = c(0,1), xlim = c(0,1))
lines(x = c(.2, .5, .8), y = c(.14, .60, .94), type = 'o', pch =3)
lines(x = c(.2, .5, .8), y = c(.24, .88, .999), type = 'o', pch = 2)
.2*200
sprintf("Dit %s is het getal één %s", 1, 2)
sprintf("Dit %s is het getal één %s", 1, c(1,2))
sprintf("Dit %s is het getal één %s", c(1, 2))
sprintf("Dit %s is het getal één %s", 1:100, 1:100)
expand.grid(1:10, 1:10)
expand.grid(1:5, 1:5)
expand.grid(1:5, 1:5, 1:5)
t.03875=abs(qt(.03875/2,df=38))
t.04    =abs(qt(.04/2,   df=38))
t.04875=abs(qt(.04875/2,df=38))
t.05    =abs(qt(.05/2,   df=38))
t.03875
t.04
t.04875
power=.9
library(pwr)
install.packages('pwr')
library(pwr)
??pwr
d=pwr.t.test(n=20,power=power)$d
ncp=d*sqrt(10)
ncp
library(devtools)
install_github('rasmusab/bayesian_first_aid')
#R CODE computing share of .04s to .05s with 90% power #Critical t-values for "strong reanalaysis"
t.03875=abs(qt(.03875/2,df=38))
t.04    =abs(qt(.04/2,   df=38))
t.04875=abs(qt(.04875/2,df=38))
t.05    =abs(qt(.05/2,   df=38))
qt(.03875/2,df=38)
abs(qt(.03875/2,df=38))
abs(qt(.04/2,   df=38))
?pwr.t.test
d=pwr.t.test(n=20,power=power)$d
d
sqrt(10)
#R CODE computing share of .04s to .05s with 90% power
#Critical t-values for "strong reanalaysis"
t.03875=abs(qt(.03875/2,df=38))
t.04    =abs(qt(.04/2,   df=38))
t.04875=abs(qt(.04875/2,df=38))
t.05    =abs(qt(.05/2,   df=38))
#Power of true studies
power=.9
#Effect size giving 90% power
library(pwr)
d=pwr.t.test(n=20,power=power)$d
#Noncentrality parameter for desired power
ncp=d*sqrt(10)
#Expected ratio of (.03875-.04) vs (.04875-.05)
#Probability that p<.04
prop1=1-pt(t.04,df=38,ncp=ncp)
#probability that p<.03875
prop2=1-pt(t.03875,df=38,ncp=ncp)
#Probability that p<.05
prop3=1-pt(t.05,df=38,ncp=ncp)
#probability that p<.04875
prop4=1-pt(t.04875,df=38,ncp=ncp)
#Share of p-values in bin .03875-.04
bin.04=prop1-prop2
bin.05=prop3-prop4
#Ratio of .04 to .05
bin.04/bin.05
library(devtools)
install.packages('devtools')
library(devtools)
install_github('stefano-meschiari/latex2exp')
library(latex2exp)
install_github('MicheleNuijten/statcheck')
library(devtools)
install_github('MicheleNuijten/statcheck')
install_github('stefano-meschiari/latex2exp')
library(latex2exp)
plot(1:10, 1:10, xlab = latex2exp('\\alpha\\times\\chi'))
plot(1:10, 1:10, xlab = latex2exp('$\\alpha\\times\\chi$'))
pchisq(q = 147.18, df = 7707)
install.packages('plotly')
library(devtools)
install_github('ropensci/plotly')
install.packages('ggplot2')
install_github('ropensci/plotly')
install.packages('Rcpp')
install.packages("Rcpp")
install_github('ropensci/plotly')
library(devtools)
install_github('ropensci/plotly')
help(signup)
help(signup, package = "plotly")
verify(username)
library(plotly)
verify()
plotly::verify
plotly::verify("chjh")
plotly
?plotly
install.packages('jsonlite')
library(jsonlite)
library(jsonlite)
# url with some information about project in Andalussia
url <- 'http://www.juntadeandalucia.es/export/drupaljda/ayudas.json'
# read url and convert to data.frame
document <- fromJSON(txt=url)
class(document)
document$documentacion
document$documentacion[1]
head(document$documentacion)
head(document$documentacion, 1)
class(document$documentacion)
class(document$documentacion$documentacion_item)
(document$documentacion$documentacion_item)[1]
300-6.18-7.5-1.93-6.46-13.7-26.81-4.99-60
duplicated(readClipboard())
x = readClipboard()
unique(x)
writeClipboard(unique(x))
.5/6
sqrt(.5/6)
if(!require(devtools)){install.packages('devtools')}
if(!require(googlesheets)){install_github('jennybc/googlesheets')}
library(googlesheets)
gs_ls()
install.packages('curl')
install.packages("curl")
gs_ls()
library(googlesheets)
gs_ls()
?gs_url()
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing")
?gs_copy
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read()
library(magrittr)
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read()
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read(range = cell_columns(1:5))
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read(col_names = TRUE)
?gs_read
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read(range = cell_cols(1:5))
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read_csv(range = cell_cols(1:5))
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read_csv()
gs_ls("icanhazpdf")
gs_ls("icanhazpdf") %>% gs_read()
gs_read("icanhazpdf")
gs_read(ss = "icanhazpdf")
gs_title("icanhazpdf") %>% gs_read()
gs_ls()
gs_ls("#icanhaz")
gs_ls("#icanhaz") %>% gs_title()
gs_ls("#icanhazpdf") %>% gs_title("#icanhazpdf")
gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read_csv()
dat <- gs_url("https://docs.google.com/spreadsheets/d/1OXMHv6lal_GiMneW4xHa2wvG4BzTyD41zcCnmfF6PUY/edit?usp=sharing") %>%
gs_read_csv()
dim(dat)
names(dat)
grep("ifttt.com/missing_link", dat$firsturl)
missing.firsturl <- [grep("ifttt.com/missing_link", dat$firsturl)]
missing.firsturl <- grep("ifttt.com/missing_link", dat$firsturl)]
dat$firsturl[missing.firsturl] <- NA
missing.firsturl <- grep("ifttt.com/missing_link", dat$firsturl)
dat$firsturl[missing.firsturl] <- NA
dat$firsturl
# Cumulative meta-analysis coronary heart disease
pval = c(0.1495,
0.0364,
0.0821,
0.0301,
0.0067,
0.0296,
0.0678,
0.0476,
0.0417,
0.0154,
0.0500,
0.0290,
0.0392,
0.0231,
0.0225,
0.0297,
0.0160,
0.0064,
0.0329,
0.0115,
0.0125,
0.0159)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
# Cumulative meta-analysis stroke
pval = c(0.1616,
0.2540,
0.2053,
0.0340,
0.0229,
0.0314,
0.0197,
0.0199,
0.0077,
0.0017,
0.0042,
0.0012,
0.0025,
0.0022)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
# Cumulative meta-analysis coronary heart disease
pval = c(0.1495,
0.0364,
0.0821,
0.0301,
0.0067,
0.0296,
0.0678,
0.0476,
0.0417,
0.0154,
0.0500,
0.0290,
0.0392,
0.0231,
0.0225,
0.0297,
0.0160,
0.0064,
0.0329,
0.0115,
0.0125,
0.0159)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
hist(pval.sig)
# Cumulative meta-analysis stroke
pval = c(0.1616,
0.2540,
0.2053,
0.0340,
0.0229,
0.0314,
0.0197,
0.0199,
0.0077,
0.0017,
0.0042,
0.0012,
0.0025,
0.0022)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
hist(pval.sig)
df
?Hmisc
??Hmisc
citation('Hmisc')
# Cumulative meta-analysis coronary heart disease
pval = c(0.1495,
0.0364,
0.0821,
0.0301,
0.0067,
0.0296,
0.0678,
0.0476,
0.0417,
0.0154,
0.0500,
0.0290,
0.0392,
0.0231,
0.0225,
0.0297,
0.0160,
0.0064,
0.0329,
0.0115,
0.0125,
0.0159)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
# Cumulative meta-analysis stroke
pval = c(0.1616,
0.2540,
0.2053,
0.0340,
0.0229,
0.0314,
0.0197,
0.0199,
0.0077,
0.0017,
0.0042,
0.0012,
0.0025,
0.0022)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
# Cumulative meta-analysis coronary heart disease
pval = c(0.1495,
0.0364,
0.0821,
0.0301,
0.0067,
0.0296,
0.0678,
0.0476,
0.0417,
0.0154,
0.0500,
0.0290,
0.0392,
0.0231,
0.0225,
0.0297,
0.0160,
0.0064,
0.0329,
0.0115,
0.0125,
0.0159)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
df
fisher
# Cumulative meta-analysis stroke
pval = c(0.1616,
0.2540,
0.2053,
0.0340,
0.0229,
0.0314,
0.0197,
0.0199,
0.0077,
0.0017,
0.0042,
0.0012,
0.0025,
0.0022)
alpha = .05
pval.sig <- pval[pval <= alpha]
pval.sig.adj <- pval.sig / alpha
fisher <- -2*sum(log(pval.sig.adj))
df = length(pval.sig.adj) * 2
pchisq(fisher, df = df)
fisher
df
fisher <- -2*sum(log(pval))
fisher
pchisq(fisher, df = df)
library(xlsx)
citation('xlsx')
citation('httr')
setwd("~/Dropbox/projects/contentmine/journal-spider")
file = grep('*.csv', list.files(), value = TRUE)
x <- read.table(file, sep = ';', dec = '.')
write.table(x, 'journals_list.csv', row.names = FALSE, col.names = FALSE, sep = ',', dec = '.')
substr(readClipboard(), 7, 10)
substr(readClipboard(), 8, 10)
writeClipboard(substr(readClipboard(), 8, 10))
substr(readClipboard(), 50, 100)
substr(readClipboard(), 40, 100)
substr(readClipboard(), 46, 100)
substr(readClipboard(), 45, 100)
substr(readClipboard(), 46, 100)
writeClipboard(substr(readClipboard(), 46, 100))
